# 터렛
# 시간 제한	메모리 제한	제출	정답	맞힌 사람	정답 비율
# 2 초	128 MB	143315	29617	23504	21.461%
# 문제
# 조규현과 백승환은 터렛에 근무하는 직원이다. 하지만 워낙 존재감이 없어서 인구수는 차지하지 않는다. 다음은 조규현과 백승환의 사진이다.



# 이석원은 조규현과 백승환에게 상대편 마린(류재명)의 위치를 계산하라는 명령을 내렸다. 조규현과 백승환은 각각 자신의 터렛 위치에서 현재 적까지의 거리를 계산했다.

# 조규현의 좌표 (x1, y1)와 백승환의 좌표 (x2, y2)가 주어지고, 조규현이 계산한 류재명과의 거리 r1과 백승환이 계산한 류재명과의 거리 r2가 주어졌을 때, 류재명이 있을 수 있는 좌표의 수를 출력하는 프로그램을 작성하시오.

# 입력
# 첫째 줄에 테스트 케이스의 개수 T가 주어진다. 각 테스트 케이스는 다음과 같이 이루어져 있다.

# 한 줄에 x1, y1, r1, x2, y2, r2가 주어진다. x1, y1, x2, y2는 -10,000보다 크거나 같고, 10,000보다 작거나 같은 정수이고, r1, r2는 10,000보다 작거나 같은 자연수이다.

# 출력
# 각 테스트 케이스마다 류재명이 있을 수 있는 위치의 수를 출력한다. 만약 류재명이 있을 수 있는 위치의 개수가 무한대일 경우에는 -1을 출력한다.
import math

testcase = int(input())
for i in range(testcase):
    x1,y1,r1,x2,y2,r2 = map(int,input().split())
    두원의거리 = math.sqrt((x1-x2)**2 + (y1-y2)**2) ##sart합수는 제곱근 구하는 함수
    if 두원의거리 == 0 and r1 == r2:# 두 원이 동심원이고 반지름이 같을때 (같은 원일때)
        print(-1)
    elif abs(r1-r2) == 두원의거리 or r1 + r2 == 두원의거리: #r1-r2 = d 이면 두원은 내접, r1+r2 = d이면 외접 
        # 내접 외접이면 한군데서만 만난다.
        # abs함수는 절대값을 내주는 함수.
        print(1)
    elif abs(r1-r2) < 두원의거리 < (r1+r2): # 서로다른 두점에서 만날때,
        print(2)
    else: print(0) #그 이외의 경우는 만나지 않는다.